<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cacos &amp; Códigos</title>
    <link>https://lbarosi.github.io/Blog/</link>
      <atom:link href="https://lbarosi.github.io/Blog/index.xml" rel="self" type="application/rss+xml" />
    <description>Cacos &amp; Códigos</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Sat, 01 Jun 2030 13:00:00 +0000</lastBuildDate>
    <image>
      <url>img/map[gravatar:%!s(bool=false) shape:circle]</url>
      <title>Cacos &amp; Códigos</title>
      <link>https://lbarosi.github.io/Blog/</link>
    </image>
    
    <item>
      <title>Example Page 1</title>
      <link>https://lbarosi.github.io/Blog/courses/example/example1/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://lbarosi.github.io/Blog/courses/example/example1/</guid>
      <description>&lt;p&gt;In this tutorial, I&amp;rsquo;ll share my top 10 tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-1&#34;&gt;Tip 1&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-2&#34;&gt;Tip 2&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Page 2</title>
      <link>https://lbarosi.github.io/Blog/courses/example/example2/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0100</pubDate>
      <guid>https://lbarosi.github.io/Blog/courses/example/example2/</guid>
      <description>&lt;p&gt;Here are some more tips for getting started with Academic:&lt;/p&gt;
&lt;h2 id=&#34;tip-3&#34;&gt;Tip 3&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
&lt;h2 id=&#34;tip-4&#34;&gt;Tip 4&lt;/h2&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;
&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;
&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;
&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;
&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>https://lbarosi.github.io/Blog/talk/example/</link>
      <pubDate>Sat, 01 Jun 2030 13:00:00 +0000</pubDate>
      <guid>https://lbarosi.github.io/Blog/talk/example/</guid>
      <description>&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Click on the &lt;strong&gt;Slides&lt;/strong&gt; button above to view the built-in slides feature.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Slides can be added in a few ways:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create&lt;/strong&gt; slides using Academic&amp;rsquo;s 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;em&gt;Slides&lt;/em&gt;&lt;/a&gt; feature and link using &lt;code&gt;slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Upload&lt;/strong&gt; an existing slide deck to &lt;code&gt;static/&lt;/code&gt; and link using &lt;code&gt;url_slides&lt;/code&gt; parameter in the front matter of the talk file&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Embed&lt;/strong&gt; your slides (e.g. Google Slides) or presentation video on this page using 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcodes&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further talk details can easily be added to this page using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Writing technical content in Academic</title>
      <link>https://lbarosi.github.io/Blog/post/writing-technical-content/</link>
      <pubDate>Fri, 12 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://lbarosi.github.io/Blog/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Highlight your code snippets, take notes on math classes, and draw diagrams from textual representation.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;On this page, you&amp;rsquo;ll find some examples of the types of technical content that can be rendered with Academic.&lt;/p&gt;
&lt;h2 id=&#34;examples&#34;&gt;Examples&lt;/h2&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the &lt;code&gt;highlight&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```python
import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import pandas as pd
data = pd.read_csv(&amp;quot;data.csv&amp;quot;)
data.head()
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;math&#34;&gt;Math&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for $\LaTeX$ math. You can enable this feature by toggling the &lt;code&gt;math&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;To render &lt;em&gt;inline&lt;/em&gt; or &lt;em&gt;block&lt;/em&gt; math, wrap your LaTeX math with &lt;code&gt;$...$&lt;/code&gt; or &lt;code&gt;$$...$$&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;math block&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$\gamma_{n} = \frac{ 
\left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T 
\left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}
{\left \|\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right \|^2}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$\gamma_{n} = \frac{ \left | \left (\mathbf x_{n} - \mathbf x_{n-1} \right )^T \left [\nabla F (\mathbf x_{n}) - \nabla F (\mathbf x_{n-1}) \right ] \right |}{\left |\nabla F(\mathbf{x}_{n}) - \nabla F(\mathbf{x}_{n-1}) \right |^2}$$&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;inline math&lt;/strong&gt; &lt;code&gt;$\nabla F(\mathbf{x}_{n})$&lt;/code&gt; renders as $\nabla F(\mathbf{x}_{n})$.&lt;/p&gt;
&lt;p&gt;Example &lt;strong&gt;multi-line math&lt;/strong&gt; using the &lt;code&gt;\\&lt;/code&gt; math linebreak:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-tex&#34;&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \\
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;$$f(k;p_0^*) = \begin{cases} p_0^* &amp;amp; \text{if }k=1, \&lt;br&gt;
1-p_0^* &amp;amp; \text {if }k=0.\end{cases}$$&lt;/p&gt;
&lt;h3 id=&#34;diagrams&#34;&gt;Diagrams&lt;/h3&gt;
&lt;p&gt;Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the &lt;code&gt;diagram&lt;/code&gt; option in your &lt;code&gt;config/_default/params.toml&lt;/code&gt; file or by adding &lt;code&gt;diagram: true&lt;/code&gt; to your page front matter.&lt;/p&gt;
&lt;p&gt;An example &lt;strong&gt;flowchart&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;graph TD
A[Hard] --&amp;gt;|Text| B(Round)
B --&amp;gt; C{Decision}
C --&amp;gt;|One| D[Result 1]
C --&amp;gt;|Two| E[Result 2]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;sequence diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;sequenceDiagram
Alice-&amp;gt;&amp;gt;John: Hello John, how are you?
loop Healthcheck
    John-&amp;gt;&amp;gt;John: Fight against hypochondria
end
Note right of John: Rational thoughts!
John--&amp;gt;&amp;gt;Alice: Great!
John-&amp;gt;&amp;gt;Bob: How about you?
Bob--&amp;gt;&amp;gt;John: Jolly good!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;Gantt diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;gantt
section Section
Completed :done,    des1, 2014-01-06,2014-01-08
Active        :active,  des2, 2014-01-07, 3d
Parallel 1   :         des3, after des1, 1d
Parallel 2   :         des4, after des1, 1d
Parallel 3   :         des5, after des3, 1d
Parallel 4   :         des6, after des4, 1d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;class diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;classDiagram
Class01 &amp;lt;|-- AveryLongClass : Cool
&amp;lt;&amp;lt;interface&amp;gt;&amp;gt; Class01
Class09 --&amp;gt; C2 : Where am i?
Class09 --* C3
Class09 --|&amp;gt; Class07
Class07 : equals()
Class07 : Object[] elementData
Class01 : size()
Class01 : int chimp
Class01 : int gorilla
class Class10 {
  &amp;lt;&amp;lt;service&amp;gt;&amp;gt;
  int id
  size()
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;An example &lt;strong&gt;state diagram&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;```mermaid
stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
```
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-mermaid&#34;&gt;stateDiagram
[*] --&amp;gt; Still
Still --&amp;gt; [*]
Still --&amp;gt; Moving
Moving --&amp;gt; Still
Moving --&amp;gt; Crash
Crash --&amp;gt; [*]
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;todo-lists&#34;&gt;Todo lists&lt;/h3&gt;
&lt;p&gt;You can even write your todo lists in Academic too:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- [x] Write math example
- [x] Write diagram example
- [ ] Do something else
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Write math example&lt;/li&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Write diagram example&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt;Do something else&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tables&#34;&gt;Tables&lt;/h3&gt;
&lt;p&gt;Represent your data in tables:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;| First Header  | Second Header |
| ------------- | ------------- |
| Content Cell  | Content Cell  |
| Content Cell  | Content Cell  |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;asides&#34;&gt;Asides&lt;/h3&gt;
&lt;p&gt;Academic supports a 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#alerts&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;shortcode for asides&lt;/a&gt;, also referred to as &lt;em&gt;notices&lt;/em&gt;, &lt;em&gt;hints&lt;/em&gt;, or &lt;em&gt;alerts&lt;/em&gt;. By wrapping a paragraph in &lt;code&gt;{{% alert note %}} ... {{% /alert %}}&lt;/code&gt;, it will render as an aside.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% alert note %}}
A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
{{% /alert %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    A Markdown aside is useful for displaying notices, hints, or definitions to your readers.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;icons&#34;&gt;Icons&lt;/h3&gt;
&lt;p&gt;Academic enables you to use a wide range of 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/page-builder/#icons&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;icons from &lt;em&gt;Font Awesome&lt;/em&gt; and &lt;em&gt;Academicons&lt;/em&gt;&lt;/a&gt; in addition to 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/#emojis&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;emojis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are some examples using the &lt;code&gt;icon&lt;/code&gt; shortcode to render icons:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; icon name=&amp;quot;terminal&amp;quot; pack=&amp;quot;fas&amp;quot; &amp;gt;}} Terminal  
{{&amp;lt; icon name=&amp;quot;python&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} Python  
{{&amp;lt; icon name=&amp;quot;r-project&amp;quot; pack=&amp;quot;fab&amp;quot; &amp;gt;}} R
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;renders as&lt;/p&gt;
&lt;p&gt;
  &lt;i class=&#34;fas fa-terminal  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Terminal&lt;br&gt;

  &lt;i class=&#34;fab fa-python  pr-1 fa-fw&#34;&gt;&lt;/i&gt; Python&lt;br&gt;

  &lt;i class=&#34;fab fa-r-project  pr-1 fa-fw&#34;&gt;&lt;/i&gt; R&lt;/p&gt;
&lt;h3 id=&#34;did-you-find-this-page-helpful-consider-sharing-it-&#34;&gt;Did you find this page helpful? Consider sharing it 🙌&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>https://lbarosi.github.io/Blog/slides/example/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://lbarosi.github.io/Blog/slides/example/</guid>
      <description>&lt;h1 id=&#34;create-slides-in-markdown-with-academic&#34;&gt;Create slides in Markdown with Academic&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic&lt;/a&gt; | 
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;features&#34;&gt;Features&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Efficiently write slides in Markdown&lt;/li&gt;
&lt;li&gt;3-in-1: Create, Present, and Publish your slides&lt;/li&gt;
&lt;li&gt;Supports speaker notes&lt;/li&gt;
&lt;li&gt;Mobile friendly slides&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;controls&#34;&gt;Controls&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Next: &lt;code&gt;Right Arrow&lt;/code&gt; or &lt;code&gt;Space&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Previous: &lt;code&gt;Left Arrow&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Start: &lt;code&gt;Home&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Finish: &lt;code&gt;End&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Overview: &lt;code&gt;Esc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Speaker notes: &lt;code&gt;S&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Fullscreen: &lt;code&gt;F&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Zoom: &lt;code&gt;Alt + Click&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;
&lt;a href=&#34;https://github.com/hakimel/reveal.js#pdf-export&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PDF Export&lt;/a&gt;: &lt;code&gt;E&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;code-highlighting&#34;&gt;Code Highlighting&lt;/h2&gt;
&lt;p&gt;Inline code: &lt;code&gt;variable&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Code block:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;porridge = &amp;quot;blueberry&amp;quot;
if porridge == &amp;quot;blueberry&amp;quot;:
    print(&amp;quot;Eating...&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;math&#34;&gt;Math&lt;/h2&gt;
&lt;p&gt;In-line math: $x + y = z$&lt;/p&gt;
&lt;p&gt;Block math:&lt;/p&gt;
&lt;p&gt;$$
f\left( x \right) = ;\frac{{2\left( {x + 4} \right)\left( {x - 4} \right)}}{{\left( {x + 4} \right)\left( {x + 1} \right)}}
$$&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fragments&#34;&gt;Fragments&lt;/h2&gt;
&lt;p&gt;Make content appear incrementally&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fragment %}} One {{% /fragment %}}
{{% fragment %}} **Two** {{% /fragment %}}
{{% fragment %}} Three {{% /fragment %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press &lt;code&gt;Space&lt;/code&gt; to play!&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;fragment &#34; &gt;
One
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
&lt;strong&gt;Two&lt;/strong&gt;
&lt;/span&gt;
&lt;span class=&#34;fragment &#34; &gt;
Three
&lt;/span&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;A fragment can accept two optional parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;class&lt;/code&gt;: use a custom style (requires definition in custom CSS)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;weight&lt;/code&gt;: sets the order in which a fragment appears&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;speaker-notes&#34;&gt;Speaker Notes&lt;/h2&gt;
&lt;p&gt;Add speaker notes to your presentation&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{% speaker_note %}}
- Only the speaker can read these notes
- Press `S` key to view
{{% /speaker_note %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Press the &lt;code&gt;S&lt;/code&gt; key to view the speaker notes!&lt;/p&gt;
&lt;aside class=&#34;notes&#34;&gt;
  &lt;ul&gt;
&lt;li&gt;Only the speaker can read these notes&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;S&lt;/code&gt; key to view&lt;/li&gt;
&lt;/ul&gt;
&lt;/aside&gt;
&lt;hr&gt;
&lt;h2 id=&#34;themes&#34;&gt;Themes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;black: Black background, white text, blue links (default)&lt;/li&gt;
&lt;li&gt;white: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;league: Gray background, white text, blue links&lt;/li&gt;
&lt;li&gt;beige: Beige background, dark text, brown links&lt;/li&gt;
&lt;li&gt;sky: Blue background, thin dark text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;night: Black background, thick white text, orange links&lt;/li&gt;
&lt;li&gt;serif: Cappuccino background, gray text, brown links&lt;/li&gt;
&lt;li&gt;simple: White background, black text, blue links&lt;/li&gt;
&lt;li&gt;solarized: Cream-colored background, dark green text, blue links&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;

&lt;section data-noprocess data-shortcode-slide
  
      
      data-background-image=&#34;/img/boards.jpg&#34;
  &gt;

&lt;h2 id=&#34;custom-slide&#34;&gt;Custom Slide&lt;/h2&gt;
&lt;p&gt;Customize the slide style and background&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;{{&amp;lt; slide background-image=&amp;quot;/img/boards.jpg&amp;quot; &amp;gt;}}
{{&amp;lt; slide background-color=&amp;quot;#0000FF&amp;quot; &amp;gt;}}
{{&amp;lt; slide class=&amp;quot;my-style&amp;quot; &amp;gt;}}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h2 id=&#34;custom-css-example&#34;&gt;Custom CSS Example&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s make headers navy colored.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;assets/css/reveal_custom.css&lt;/code&gt; with:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.reveal section h1,
.reveal section h2,
.reveal section h3 {
  color: navy;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;questions&#34;&gt;Questions?&lt;/h1&gt;
&lt;p&gt;
&lt;a href=&#34;https://spectrum.chat/academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ask&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/managing-content/#create-slides&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Documentation&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://lbarosi.github.io/Blog/post/grandesfortunas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://lbarosi.github.io/Blog/post/grandesfortunas/</guid>
      <description>&lt;h1 id=&#34;grandes-fortunas-no-brasil&#34;&gt;Grandes Fortunas no Brasil&lt;/h1&gt;
&lt;p&gt;Date: 2020-03-29&lt;br&gt;
Author: Luciano Barosi
Categories: Python, Data Science
Tags: Brasil, Renda
featured: false&lt;/p&gt;
&lt;!--eofm--&gt;
&lt;h2 id=&#34;inicialização&#34;&gt;Inicialização&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# show result from all calculations of the cell
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = &amp;quot;all&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Kernel Python
import os
import sys
os.chdir(sys.path[0])
dirpath = os.getcwd()
print(&amp;quot;Diretório atual: &amp;quot; + dirpath)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;Diretório atual: /home/lbarosi/Pythonia/GrandesFortunas
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import numpy as np
from scipy import stats
import matplotlib.pyplot as plt 
import matplotlib.ticker as ticker
import pandas as pd
import seaborn as sns
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;proposta&#34;&gt;Proposta&lt;/h2&gt;
&lt;p&gt;Vamos utilizar os dados da Receita Federal disponíveis para procurar fazer uma boa visualização de dados sobre o que é de fato uma grande fortuna, para que casa pessoa possa se enxergar de maneira razoavelmente realista na pirâmide de renda e na distribuição por percentis.&lt;/p&gt;
&lt;p&gt;Adicionalmente, queremos  vamos observar a participação no imposto de renda por Natureza de Ocupação e por Ocupação.&lt;/p&gt;
&lt;h2 id=&#34;dados&#34;&gt;Dados&lt;/h2&gt;
&lt;p&gt;A 
&lt;a href=&#34;http://receita.economia.gov.br/dados/receitadata/estudos-e-tributarios-e-aduaneiros/estudos-e-estatisticas/distribuicao-da-renda-por-centis/dados-informacoes-e-graficos-setoriais-2008-a-2012&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Receita Federal&lt;/a&gt; possui uma base de dados com informações agregadas da basew de dados de declaração de impostos de renda no Brasil. Vamos utilizar as tabelas de &lt;strong&gt;Distribuição da Renda por Centis&lt;/strong&gt; para o ano de &lt;strong&gt;2018&lt;/strong&gt;, último ano disponível no momento de criação deste notebook.&lt;/p&gt;
&lt;p&gt;O Salário mínimo é utilizado como base de cálculo das aliquotas, para o ano de 2017 (referente ao ano da declaração de &lt;strong&gt;2018&lt;/strong&gt;) o valor do salário segue abaixo, expresso em reais.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;SM = 937.0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As alíquotas de imposto de renda para o ano base adotado são:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;Faixas = { 0 : 1903.99,
           1 : 2826.65,
           2 : 3751.05,
           3 : 4664.68,
           4 : 4664.68}
Aliquota = { 0 : 0.,
             1 : 0.075,
             2 : 0.15,
             3 : 0.225,
             4 : 0.275}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;O imposto de grandes fortunas prevê três faixas de tributação. Quem tem patrimônio líquido entre 12 mil e 20 mil vezes o limite de isenção (entre $R$ $ 22,8 milhões e $R$ $ 38 milhões) paga 0,5% de imposto. As fortunas entre 20 mil e 70 mil vezes (entre $R$ $ 38 milhões e $R$ $ 133,2 milhões) pagam 0,75%. Milionários com patrimônio acima desse valor são tributados em 1%.&lt;/p&gt;
&lt;p&gt;As classes de renda no Brasil tem muitas definições, vamos adotar uma definição baseada na renda, tendo como base o salário mínimo. Esta é a definição mais fácil de ser aplicada nos dados e comparada em qualquer série temporal.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# Faixas 0.5, 0.75, 1
classeB = [10*SM*12, 20*SM*12]
classeC = [4*SM*12, 10*SM*12]
classeD = [2*SM*12, 4*SM*12]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A tabela em excel da receita federal não é útil para análise de dados automatizada, selecionamos algumas colunas e colocamos em um formato adequado para o pandas em uma tabela &lt;em&gt;csv&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Consideramos a tabela disponível para as informações consolidadas &lt;strong&gt;RB2&lt;/strong&gt; que inclui renda tributável, participações societárias, lucros e dividendos e rendas sujeitas a tributação exclusiva.&lt;/p&gt;
&lt;p&gt;Selecionamos os percentis (&lt;strong&gt;centil&lt;/strong&gt;), o número de contribuintes (&lt;strong&gt;contribuinte&lt;/strong&gt;), o limite superior do percentil (&lt;strong&gt;centil_SUP&lt;/strong&gt; em R$), a média de renda do percentil (&lt;strong&gt;media&lt;/strong&gt; em R$) e o importo devido da faixa (&lt;strong&gt;IR&lt;/strong&gt; em milhões de R$).&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = pd.read_csv(&amp;quot;./DATA/centis-ac2018.csv&amp;quot;, sep = &amp;quot;;&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;análise&#34;&gt;Análise&lt;/h2&gt;
&lt;p&gt;Criamos uma amostra da população em cada percentil dividindo a quantidade da população do percentil por 100 e distribuimos suas rendas de maneira uniforme no intervalo. O intuito aqui é puramente gráfico, para mostrar a densidade de pessoas em cada faixa de renda.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;tmp = np.empty(len(df.media), dtype=object)
for i in np.arange(0,len(df.media)):
    def step(x):
        if x&amp;lt; 90:
            return 0.5
        else:
            return 0.05
    st = step(df.centil[i])
    passo = 2*st
    tmp[i] = np.array([df.centil[i]-st + np.random.uniform(0,passo,int(df.contribuinte[i]/100)),
                       np.random.uniform(0, df.centil_SUP[i], int(df.contribuinte[i]/100))])

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Agora podemos visualizar a distribuição de renda por percentil. Para que tenhamos alguma referência, indicamos os limites das classes sociais D, C, B, e A, bem como o que serião as classes de grandes fortunas (que se dividiriam também em C, B e A.&lt;/p&gt;
&lt;p&gt;Também marcamos a linha da pobreza e a linha que indica o teto do salário no Judiciário.&lt;/p&gt;
&lt;p&gt;A diferença de escalas é muito grande e é necessário uma escala logarítmica para viasualizar os dados. Mesmo esta escala não é muito fácil fazer todos os percentis aparecerem. Os dados se espalham por 7 ordens de grandeza.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig = plt.figure(figsize = (14,4))
fig.suptitle(&amp;quot;Percentis de renda do Brasil em 2018 e classes econômicas&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )

for cent in np.arange(5,tmp.shape[0]):
    plt.scatter(x = tmp[cent][0], y = tmp[cent][1], s = 5, marker=&amp;quot;.&amp;quot;, alpha = 0.1)
x = np.linspace(99,100.05,200)
ax.fill_between(x, Faixas[0]*12000, Faixas[0]*20000, alpha = 0.7, label = &amp;quot;Grandes Fortunas B&amp;quot;)
ax.fill_between(x, Faixas[0]*20000, Faixas[0]*70000, alpha = 0.7, label = &amp;quot;Grandes Fortunas C&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeB[1]].centil.max(), 100.05,200)
ax.fill_between(x, classeB[1], 12*39*SM, alpha = 0.7, label = &amp;quot;Classe A&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeB[0]].centil.max(), df[df.centil_SUP &amp;lt; classeB[1]].centil.max(), 200)
ax.fill_between(x, *classeB, alpha = 0.7, label = &amp;quot;Classe B:&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeC[0]].centil.max(), df[df.centil_SUP &amp;lt; classeC[1]].centil.max(), 200)
ax.fill_between(x, *classeC, alpha = 0.7, label = &amp;quot;Classe C&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeD[0]].centil.max(), df[df.centil_SUP &amp;lt; classeD[1]].centil.max(), 200)
ax.fill_between(x, *classeD, alpha = 0.7, label = &amp;quot;Classe D&amp;quot;)

ax.axhline(12*39*SM, linewidth=2.5, linestyle = &amp;quot;dashed&amp;quot;, label = &amp;quot;Teto do Judiciario&amp;quot;);
ax.axhline(365*3.4*5.5, linewidth=2.5, linestyle = &amp;quot;dotted&amp;quot;, color = &amp;quot;red&amp;quot;, label = &amp;quot;Linha da Pobreza&amp;quot;);
ax.set_yscale(&amp;quot;log&amp;quot;)
ax.scatter(x = df.centil, y = df.media, marker = &amp;quot;x&amp;quot;, c = &amp;quot;red&amp;quot;, label= &amp;quot;media de renda&amp;quot;)
ax.set_ylim(100,10000000000)
ax.set_xlim(1,101)
ax.set_title(&amp;quot;Cada ponto corresponde a cerca de 3000 pessoas para cada 1%&amp;quot;)
ax.set_ylabel(&amp;quot;Renda Bruta Anual (Log)&amp;quot;)
ax.set_xlabel(&amp;quot;Percentil de renda&amp;quot;)
plt.grid()
plt.legend(loc=&#39;upper left&#39;)
#fig.savefig(&#39;GrandesFortunas.png&#39;, dpi=300)
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_22_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Vamos agora observar com mais detalhe os percentis mais altos. Observamos que a distância entre as classes B e A e a extrema pobreza são menores do que as distâncias até o início da marca das grandes fortunas.&lt;/p&gt;
&lt;p&gt;Na definição atual de grandes fortunas, apenas uma pequena parte do percentil 99.9 - 100 é considerado grande fortuna, ou seja, as pessoas 100 vezes mais ricas do que a classe A típica. No gráfico abaixo, sem uma escala logarítmica, a classe B sequer apareceria!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig = plt.figure(figsize = (14,4))
fig.suptitle(&amp;quot;Percentis de renda do Brasil em 2018 e classes econômicas&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )

for cent in np.arange(5,tmp.shape[0]):
    plt.scatter(x = tmp[cent][0], y = tmp[cent][1], s = 5, marker=&amp;quot;.&amp;quot;, alpha = 0.1)
x = np.linspace(99,100.05,200)
ax.fill_between(x, Faixas[0]*12000, Faixas[0]*20000, alpha = 0.7, label = &amp;quot;Grandes Fortunas B&amp;quot;)
ax.fill_between(x, Faixas[0]*20000, Faixas[0]*70000, alpha = 0.7, label = &amp;quot;Grandes Fortunas C&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeB[1]].centil.max(), 100.05,200)
ax.fill_between(x, classeB[1], 12*39*SM, alpha = 0.7, label = &amp;quot;Classe A&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeB[0]].centil.max(), df[df.centil_SUP &amp;lt; classeB[1]].centil.max(), 200)
ax.fill_between(x, *classeB, alpha = 0.7, label = &amp;quot;Classe B:&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeC[0]].centil.max(), df[df.centil_SUP &amp;lt; classeC[1]].centil.max(), 200)
ax.fill_between(x, *classeC, alpha = 0.7, label = &amp;quot;Classe C&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeD[0]].centil.max(), df[df.centil_SUP &amp;lt; classeD[1]].centil.max(), 200)
ax.fill_between(x, *classeD, alpha = 0.7, label = &amp;quot;Classe D&amp;quot;)

ax.axhline(12*39*SM, linewidth=2.5, linestyle = &amp;quot;dashed&amp;quot;, label = &amp;quot;Teto do Judiciario&amp;quot;);
ax.axhline(365*3.4*5.5, linewidth=2.5, linestyle = &amp;quot;dotted&amp;quot;, color = &amp;quot;red&amp;quot;, label = &amp;quot;Linha da Pobreza&amp;quot;);
ax.set_yscale(&amp;quot;log&amp;quot;)
ax.scatter(x = df.centil, y = df.media, marker = &amp;quot;x&amp;quot;, c = &amp;quot;red&amp;quot;, label= &amp;quot;media de renda&amp;quot;)
ax.set_ylim(100,10000000000)
ax.set_xlim(90,101)
ax.set_title(&amp;quot;Zoom no topo da pirâmide&amp;quot;)
ax.set_ylabel(&amp;quot;Renda Bruta Anual (Log)&amp;quot;)
ax.set_xlabel(&amp;quot;Percentil de renda&amp;quot;)
plt.grid()
plt.legend(loc=&#39;upper left&#39;)
#fig.savefig(&#39;GrandesFortunas.png&#39;, dpi=300)
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_24_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;O imposto de renda pago por cada contribuinte pode ser representado por uma alíquota efetiva, que leva em conta as diferentes faixas do imposto. Vamos aqui calcular a Alíquota efetiva por percentil.&lt;/p&gt;
&lt;p&gt;Para fazer isto vamos considerar o número de pessoas no percentil com renda dada pela média de renda do percentil, o que correspone a um total de renda do percentil.&lt;/p&gt;
&lt;p&gt;A tabela da receita apresenta também a informação de quanto foi o IR devido para todo o percentil. A razão entre estes dois números vai informar uma alíquota efetiva.&lt;/p&gt;
&lt;p&gt;Vemos que  crescimento da alíquota efetiva tem um padrão curioso nos percentis mais altos.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df[&amp;quot;Efetivo&amp;quot;] = df.IR*1000000/(df.media*df.contribuinte)
df = df.dropna()
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Alíquota efetiva de IR por percentil dos contribuintes&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
for i in np.arange(5,len(df.centil)-7):
    x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10)
    ax.fill_between(x, df.Efetivo[i])
for i in np.arange(98,len(df.centil)+4):
    x = np.linspace(df.centil[i]-0.05, df.centil[i]+0.05,10)
    ax.fill_between(x, df.Efetivo[i])
#ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), 
#                color=&amp;quot;b&amp;quot;, 
#                alpha = 0.2)
ax.set_title(&amp;quot;Apenas classes C, B e A&amp;quot;)
ax.set_ylabel(&amp;quot;Alíquota Efetiva&amp;quot;)
ax.set_xlabel(&amp;quot;Percentil de renda&amp;quot;)
ax.set_xlim(30,105)
#plt.legend()
#fig.savefig(&#39;ImpostoEfetivo.png&#39;, dpi=300)
plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_27_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Alíquota efetiva de IR por percentil dos contribuintes&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
for i in np.arange(5,len(df.centil)-7):
    x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10)
    ax.fill_between(x, df.Efetivo[i], alpha = 0.6)
for i in np.arange(98,len(df.centil)+4):
    x = np.linspace(df.centil[i]-0.05, df.centil[i]+0.05,10)
    ax.fill_between(x, df.Efetivo[i], alpha = 0.6)
#ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), 
#                color=&amp;quot;b&amp;quot;, 
#                alpha = 0.2)
ax.set_title(&amp;quot;Apenas classes C, B e A&amp;quot;)
ax.set_ylabel(&amp;quot;Alíquota Efetiva&amp;quot;)
ax.set_xlabel(&amp;quot;Percentil de renda&amp;quot;)
ax.set_xlim(90,105)
plt.grid()
#plt.legend()
fig.savefig(&#39;ImpostoEfetivo.png&#39;, dpi=300)
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_28_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Imposto Devido Total por percentil dos contribuintes&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
for i in np.arange(5,len(df.centil)-6):
    x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10)
    ax.fill_between(x, df.IR[i])
for i in np.arange(99,len(df.centil)+4):
    x = np.linspace(df.centil[i]+0.5-0.05, df.centil[i]+0.5+0.05,10)
    ax.fill_between(x, df.IR[i])
ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), 
                color=&amp;quot;b&amp;quot;, 
                alpha = 0.2)
x = np.linspace(df[df.centil_SUP &amp;lt; classeB[1]].centil.max(), 100.05,200)
ax.fill_between(x, 20000, 21000, alpha = 0.6, label = &amp;quot;Classe A&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeB[0]].centil.max(), df[df.centil_SUP &amp;lt; classeB[1]].centil.max(), 200)
ax.fill_between(x, 20000, 21000, alpha = 0.6, label = &amp;quot;Classe B:&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeC[0]].centil.max(), df[df.centil_SUP &amp;lt; classeC[1]].centil.max(), 200)
ax.fill_between(x, 20000, 21000, alpha = 0.6, label = &amp;quot;Classe C&amp;quot;)

x = np.linspace(df[df.centil_SUP &amp;lt; classeD[0]].centil.max(), df[df.centil_SUP &amp;lt; classeD[1]].centil.max(), 200)
ax.fill_between(x, *classeD, alpha = 0.7, label = &amp;quot;Classe D&amp;quot;)
ax.set_title(&amp;quot;Apenas classes C, B e A&amp;quot;)
ax.set_ylabel(&amp;quot;Valor Devido do IR (R\$ milhões)&amp;quot;)
ax.set_xlabel(&amp;quot;Percentil de renda&amp;quot;)
ax.set_xlim(50,105)
ax.set_ylim(0,30000)
plt.grid()
#ax.set_yscale(&amp;quot;log&amp;quot;)
#plt.legend()
fig.savefig(&#39;ImpostoEfetivo.png&#39;, dpi=300)
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_29_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;O 1% mais rica da população contribui com mais imposto do que 78% dos contribuintes somados. Por outro lado, a média de renda do pecentil 99.9 é maior do que todas as rendas somadas até o percentil 97!&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.IR[-10:].sum() &amp;lt; df.IR[0:76].sum();
df.IR[-10:].sum() &amp;lt; df.IR[0:77].sum();
df.centil[77];
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df.media[-1:].sum() &amp;lt; df.media[0:96].sum();
df.centil[-1:];
df.centil[96];
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;dados-por-natureza-de-ocupação&#34;&gt;Dados por Natureza de Ocupação&lt;/h2&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_Nat = pd.read_excel(&amp;quot;./DATA/RELATORIO_2017.xlsx&amp;quot;,
              sheet_name=&amp;quot;NATUREZA&amp;quot;)  
df_Ocu = pd.read_excel(&amp;quot;./DATA/RELATORIO_2017.xlsx&amp;quot;,
              sheet_name=&amp;quot;OCUPACAO&amp;quot;)  
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_Nat = df_Nat.drop(columns = [&amp;quot;NATUREZA_DA_OCUPACAO&amp;quot;]).groupby(&amp;quot;TIPO&amp;quot;).sum()
df_Nat[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Nat.QTDE_DECLARANTES/df_Nat.QTDE_DECLARANTES.sum()
df_Nat[&amp;quot;FRACAO_RTL&amp;quot;] = df_Nat.RTL/df_Nat.RTL.sum()
df_Nat[&amp;quot;FRACAO_IR&amp;quot;] = df_Nat.IR/df_Nat.IR.sum()

df_Nat[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Nat.RTL/(df_Nat.QTDE_DECLARANTES*13)
df_Nat[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Nat.IR/df_Nat.QTDE_DECLARANTES

df_Nat = df_Nat.reset_index()
df_Nat = df_Nat.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;TIPO&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Nat.TIPO = df_Nat.TIPO.astype(&#39;category&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_Ocu = df_Ocu.drop(columns = [&amp;quot;OCUPACAO&amp;quot;]).groupby(&amp;quot;Tipo&amp;quot;).sum()
df_Ocu[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum()
df_Ocu[&amp;quot;FRACAO_RTL&amp;quot;] = df_Ocu.RTL/df_Ocu.RTL.sum()
df_Ocu[&amp;quot;FRACAO_IR&amp;quot;] = df_Ocu.IR/df_Ocu.IR.sum()
df_Ocu[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13)
df_Ocu[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES
df_Ocu = df_Ocu.reset_index()
df_Ocu = df_Ocu.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;Tipo&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Ocu.Tipo = df_Ocu.Tipo.astype(&#39;category&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As tabelas da receita federal também apresentam dados consolidados por ocupação e profissão. Reorgnizamos as categorias da Receita nas categorias abaixo para facilitar a visualização. A renda média mensal líquida é calculada a partir da soma da renda da categoria, dividida pela população de contribuintes na categoria e dividido por 13, correspondendo ao salário de 12 meses mais o 13 salário..&lt;/p&gt;
&lt;p&gt;Funcionários do sistema financeiro público ou privado e servidores públicos apresentam a maior renda, seguidos pelos empregador na iniciativa privada e militares que seguem quase empátados e depois, todos no mesmo nível Autônomos, Pensionistas, pequenas empresas e outros.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = df_Nat[df_Nat[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;TIPO&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();


&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_38_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Se observarmos o extrato por profissão temos que levar em consideração que muitas profissões se enquadram em outros, que não estão sendo considerados. O foco é comparar os dados para os servidores públicos do executivo, legislativo e judiciário (junto com Ministerio Público) com militares, professores, funcionários da saúde e padres e pastores.&lt;/p&gt;
&lt;p&gt;É fácil observar que o número de declarantes no extrato considerado é majoritariamente de professores. As outras duas colunas se referem a participação do extrato profissional no todo, com respeito a renda total líquida e o imposto devido.&lt;/p&gt;
&lt;p&gt;A mudança de proporção entre as colunas indica variações na renda média entre a coluna de declarantes e a coluna de renda líquida e o imposto devido carrega as informações de renda e de representação na população.&lt;/p&gt;
&lt;p&gt;A renda édia de servidores do Juciário, servidores de saúde e servidores públicos em geral deve se mostgrar significativamente mais elevada do que as rendas das outras categorias. Podemos estimar que a renda média de militares e de pŕofessores deva ser semelhante.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import matplotlib.ticker as ticker

df = df_Ocu[~df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;, &amp;quot;IR_capita&amp;quot;])]
df = df[df.Tipo != &amp;quot;OUTROS&amp;quot;]
df.Tipo = df.Tipo.astype(str)
fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Fração do Total&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )

ax = sns.barplot(data=df, x=&#39;Tipo&#39;, y=&#39;Value&#39;, hue=&#39;fracao&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;%&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)
ax.yaxis.set_major_formatter(ticker.PercentFormatter(xmax=5))

handles, labels = ax.get_legend_handles_labels()
ax.legend(handles = handles, labels=[&amp;quot;Declarantes&amp;quot;, &amp;quot;Renda Líquida&amp;quot;, &amp;quot;Imposto Devido&amp;quot;])

plt.grid()
plt.show();




&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_40_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Ao observarmos a renda média mensal entre as diferentes profissões, vemos que o Judiário e os funcionários do Fisco se destacam dos outros, logo depois os servidores do executivo e os servidores em geral.&lt;/p&gt;
&lt;p&gt;Chama atenção que os profissionais da Saúde parecem ter uma renda pequena, mas todas as áreas estão agregadas.&lt;/p&gt;
&lt;p&gt;Também os professores apresentam uma renda baixa, mas estão agregados diferentes profissionais da educação.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df = df_Ocu[df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;Tipo&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_42_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;df_OcuZ = pd.read_excel(&amp;quot;./DATA/RELATORIO_2017.xlsx&amp;quot;,
              sheet_name=&amp;quot;OCUPACAO&amp;quot;)  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quando observamos os extrados segmentados, vemos que os professores de ensino superior são significativamente melhos remunerados do que os outros. Ganhando essencialmente o dobro dos outros professores.&lt;/p&gt;
&lt;p&gt;Também os médicos se destacam, ganhando o triplo do que as outras categoriasda saúde.&lt;/p&gt;
&lt;p&gt;Também encontramos uma uniformidade nas carreiras do judiciário e entre os servidores públicos.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prof = &amp;quot;PROFESSOR&amp;quot;
df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(&amp;quot;OCUPACAO&amp;quot;).sum()
df_Ocu[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum()
df_Ocu[&amp;quot;FRACAO_RTL&amp;quot;] = df_Ocu.RTL/df_Ocu.RTL.sum()
df_Ocu[&amp;quot;FRACAO_IR&amp;quot;] = df_Ocu.IR/df_Ocu.IR.sum()
df_Ocu[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13)
df_Ocu[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES
df_Ocu = df_Ocu.reset_index()
df_Ocu = df_Ocu.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;OCUPACAO&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype(&#39;category&#39;)

df = df_Ocu[df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal - Profissionais de Educação&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;OCUPACAO&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_45_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prof = &amp;quot;SAÚDE&amp;quot;
df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(&amp;quot;OCUPACAO&amp;quot;).sum()
df_Ocu[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum()
df_Ocu[&amp;quot;FRACAO_RTL&amp;quot;] = df_Ocu.RTL/df_Ocu.RTL.sum()
df_Ocu[&amp;quot;FRACAO_IR&amp;quot;] = df_Ocu.IR/df_Ocu.IR.sum()
df_Ocu[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13)
df_Ocu[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES
df_Ocu = df_Ocu.reset_index()
df_Ocu = df_Ocu.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;OCUPACAO&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype(&#39;category&#39;)

df = df_Ocu[df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal - Profissionais da Saúde&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;OCUPACAO&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_46_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prof = &amp;quot;SERVIDOR&amp;quot;
df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(&amp;quot;OCUPACAO&amp;quot;).sum()
df_Ocu[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum()
df_Ocu[&amp;quot;FRACAO_RTL&amp;quot;] = df_Ocu.RTL/df_Ocu.RTL.sum()
df_Ocu[&amp;quot;FRACAO_IR&amp;quot;] = df_Ocu.IR/df_Ocu.IR.sum()
df_Ocu[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13)
df_Ocu[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES
df_Ocu = df_Ocu.reset_index()
df_Ocu = df_Ocu.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;OCUPACAO&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype(&#39;category&#39;)

df = df_Ocu[df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal - Servidor Público&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;OCUPACAO&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_47_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prof = &amp;quot;JUDICIARIO&amp;quot;
df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(&amp;quot;OCUPACAO&amp;quot;).sum()
df_Ocu[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum()
df_Ocu[&amp;quot;FRACAO_RTL&amp;quot;] = df_Ocu.RTL/df_Ocu.RTL.sum()
df_Ocu[&amp;quot;FRACAO_IR&amp;quot;] = df_Ocu.IR/df_Ocu.IR.sum()
df_Ocu[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13)
df_Ocu[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES
df_Ocu = df_Ocu.reset_index()
df_Ocu = df_Ocu.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;OCUPACAO&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype(&#39;category&#39;)

df = df_Ocu[df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal - JUDICIÁRIO&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;OCUPACAO&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_48_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;prof = &amp;quot;EXECUTIVO&amp;quot;
df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(&amp;quot;OCUPACAO&amp;quot;).sum()
df_Ocu[&amp;quot;FRACAO_Declarantes&amp;quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum()
df_Ocu[&amp;quot;FRACAO_RTL&amp;quot;] = df_Ocu.RTL/df_Ocu.RTL.sum()
df_Ocu[&amp;quot;FRACAO_IR&amp;quot;] = df_Ocu.IR/df_Ocu.IR.sum()
df_Ocu[&amp;quot;RTL_capita&amp;quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13)
df_Ocu[&amp;quot;IR_capita&amp;quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES
df_Ocu = df_Ocu.reset_index()
df_Ocu = df_Ocu.drop(
    columns = [&amp;quot;QTDE_DECLARANTES&amp;quot;, &amp;quot;RT_EXCLUSIVO&amp;quot;, &amp;quot;RT&amp;quot;, &amp;quot;RISENTO&amp;quot;, &amp;quot;RTL&amp;quot;, &amp;quot;IR&amp;quot;])\
    .melt(id_vars=[&amp;quot;OCUPACAO&amp;quot;], var_name=&amp;quot;fracao&amp;quot;, value_name=&amp;quot;Value&amp;quot;)
df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype(&#39;category&#39;)

df = df_Ocu[df_Ocu[&amp;quot;fracao&amp;quot;].isin([&amp;quot;RTL_capita&amp;quot;])]

fig = plt.figure(figsize = (15,5))
fig.suptitle(&amp;quot;Renda Líquida Média Mensal - EXECUTIVO&amp;quot;, fontsize=14, fontweight=&#39;bold&#39;)
ax = fig.add_subplot(111 )
ax = sns.barplot(data=df, x=&#39;OCUPACAO&#39;, y=&#39;Value&#39;)

ax.set_xlabel(&amp;quot;Natureza da Ocupação&amp;quot;)
ax.set_ylabel(&amp;quot;R\$&amp;quot;)
ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment=&#39;right&#39;)


plt.grid()
plt.show();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;./index_49_0.png&#34; alt=&#34;png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
