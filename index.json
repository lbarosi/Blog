[{"authors":["admin"],"categories":null,"content":"Luciano Barosi is a Physics Professor in UFCG and a member of BINGO Collaboration.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://lbarosi.github.io/Blog/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/Blog/authors/admin/","section":"authors","summary":"Luciano Barosi is a Physics Professor in UFCG and a member of BINGO Collaboration.","tags":null,"title":"Luciano Barosi","type":"authors"},{"authors":null,"categories":null,"content":"Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://lbarosi.github.io/Blog/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/Blog/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"https://lbarosi.github.io/Blog/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/Blog/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"https://lbarosi.github.io/Blog/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/Blog/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://lbarosi.github.io/Blog/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/Blog/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":["Python","Data Science"],"content":"Como você acha que se posiciona na pirâmica econômica brasileira? Quão grande é a desigualdade de renda no Brasil? Um pequeno passeio nos dados sumarizados da receita federal.\nInicialização Diretório atual: /home/lbarosi/Pythonia/GrandesFortunas  Proposta Vamos utilizar os dados da Receita Federal disponíveis para procurar fazer uma boa visualização de dados sobre o que é de fato uma grande fortuna, para que casa pessoa possa se enxergar de maneira razoavelmente realista na pirâmide de renda e na distribuição por percentis.\nAdicionalmente, queremos vamos observar a participação no imposto de renda por Natureza de Ocupação e por Ocupação.\nDados A Receita Federal possui uma base de dados com informações agregadas da basew de dados de declaração de impostos de renda no Brasil. Vamos utilizar as tabelas de Distribuição da Renda por Centis para o ano de 2018, último ano disponível no momento de criação deste notebook.\nO Salário mínimo é utilizado como base de cálculo das aliquotas, para o ano de 2017 (referente ao ano da declaração de 2018) o valor do salário segue abaixo, expresso em reais.\nSM = 937.0  As alíquotas de imposto de renda para o ano base adotado são:\nFaixas = { 0 : 1903.99, 1 : 2826.65, 2 : 3751.05, 3 : 4664.68, 4 : 4664.68} Aliquota = { 0 : 0., 1 : 0.075, 2 : 0.15, 3 : 0.225, 4 : 0.275}  O imposto de grandes fortunas prevê três faixas de tributação. Quem tem patrimônio líquido entre 12 mil e 20 mil vezes o limite de isenção (entre $R$ $ 22,8 milhões e $R$ $ 38 milhões) paga 0,5% de imposto. As fortunas entre 20 mil e 70 mil vezes (entre $R$ $ 38 milhões e $R$ $ 133,2 milhões) pagam 0,75%. Milionários com patrimônio acima desse valor são tributados em 1%.\nAs classes de renda no Brasil tem muitas definições, vamos adotar uma definição baseada na renda, tendo como base o salário mínimo. Esta é a definição mais fácil de ser aplicada nos dados e comparada em qualquer série temporal.\n# Faixas 0.5, 0.75, 1 classeB = [10*SM*12, 20*SM*12] classeC = [4*SM*12, 10*SM*12] classeD = [2*SM*12, 4*SM*12]  A tabela em excel da receita federal não é útil para análise de dados automatizada, selecionamos algumas colunas e colocamos em um formato adequado para o pandas em uma tabela csv.\nConsideramos a tabela disponível para as informações consolidadas RB2 que inclui renda tributável, participações societárias, lucros e dividendos e rendas sujeitas a tributação exclusiva.\nSelecionamos os percentis (centil), o número de contribuintes (contribuinte), o limite superior do percentil (centil_SUP em R$), a média de renda do percentil (media em R$) e o importo devido da faixa (IR em milhões de R$).\ndf = pd.read_csv(\u0026quot;./DATA/centis-ac2018.csv\u0026quot;, sep = \u0026quot;;\u0026quot;)  Análise Criamos uma amostra da população em cada percentil dividindo a quantidade da população do percentil por 100 e distribuimos suas rendas de maneira uniforme no intervalo. O intuito aqui é puramente gráfico, para mostrar a densidade de pessoas em cada faixa de renda.\nAgora podemos visualizar a distribuição de renda por percentil. Para que tenhamos alguma referência, indicamos os limites das classes sociais D, C, B, e A, bem como o que serião as classes de grandes fortunas (que se dividiriam também em C, B e A.\nTambém marcamos a linha da pobreza e a linha que indica o teto do salário no Judiciário.\nA diferença de escalas é muito grande e é necessário uma escala logarítmica para viasualizar os dados. Mesmo esta escala não é muito fácil fazer todos os percentis aparecerem. Os dados se espalham por 7 ordens de grandeza.\nVamos agora observar com mais detalhe os percentis mais altos. Observamos que a distância entre as classes B e A e a extrema pobreza são menores do que as distâncias até o início da marca das grandes fortunas.\nNa definição atual de grandes fortunas, apenas uma pequena parte do percentil 99.9 - 100 é considerado grande fortuna, ou seja, as pessoas 100 vezes mais ricas do que a classe A típica. No gráfico abaixo, sem uma escala logarítmica, a classe B sequer apareceria!\nO imposto de renda pago por cada contribuinte pode ser representado por uma alíquota efetiva, que leva em conta as diferentes faixas do imposto. Vamos aqui calcular a Alíquota efetiva por percentil.\nPara fazer isto vamos considerar o número de pessoas no percentil com renda dada pela média de renda do percentil, o que correspone a um total de renda do percentil.\nA tabela da receita apresenta também a informação de quanto foi o IR devido para todo o percentil. A razão entre estes dois números vai informar uma alíquota efetiva.\nVemos que crescimento da alíquota efetiva tem um padrão curioso nos percentis mais altos.\ndf[\u0026quot;Efetivo\u0026quot;] = df.IR*1000000/(df.media*df.contribuinte) df = df.dropna()  #hide fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Alíquota efetiva de IR por percentil dos contribuintes\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) for i in np.arange(5,len(df.centil)-7): x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10) ax.fill_between(x, df.Efetivo[i]) for i in np.arange(98,len(df.centil)+4): x = np.linspace(df.centil[i]-0.05, df.centil[i]+0.05,10) ax.fill_between(x, df.Efetivo[i]) #ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), # color=\u0026quot;b\u0026quot;, # alpha = 0.2) ax.set_title(\u0026quot;Apenas classes C, B e A\u0026quot;) ax.set_ylabel(\u0026quot;Alíquota Efetiva\u0026quot;) ax.set_xlabel(\u0026quot;Percentil de renda\u0026quot;) ax.set_xlim(30,105) #plt.legend() #fig.savefig('ImpostoEfetivo.png', dpi=300) plt.grid() plt.show();  O 1% mais rica da população contribui com mais imposto do que 78% dos contribuintes somados. Por outro lado, a média de renda do pecentil 99.9 é maior do que todas as rendas somadas até o percentil 97!\nDados por Natureza de Ocupação df_Nat = pd.read_excel(\u0026quot;./DATA/RELATORIO_2017.xlsx\u0026quot;, sheet_name=\u0026quot;NATUREZA\u0026quot;) df_Ocu = pd.read_excel(\u0026quot;./DATA/RELATORIO_2017.xlsx\u0026quot;, sheet_name=\u0026quot;OCUPACAO\u0026quot;)  df_Nat = df_Nat.drop(columns = [\u0026quot;NATUREZA_DA_OCUPACAO\u0026quot;]).groupby(\u0026quot;TIPO\u0026quot;).sum() df_Nat[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Nat.QTDE_DECLARANTES/df_Nat.QTDE_DECLARANTES.sum() df_Nat[\u0026quot;FRACAO_RTL\u0026quot;] = df_Nat.RTL/df_Nat.RTL.sum() df_Nat[\u0026quot;FRACAO_IR\u0026quot;] = df_Nat.IR/df_Nat.IR.sum() df_Nat[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Nat.RTL/(df_Nat.QTDE_DECLARANTES*13) df_Nat[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Nat.IR/df_Nat.QTDE_DECLARANTES df_Nat = df_Nat.reset_index() df_Nat = df_Nat.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;TIPO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Nat.TIPO = df_Nat.TIPO.astype('category')  As tabelas da receita federal também apresentam dados consolidados por ocupação e profissão. Reorgnizamos as categorias da Receita nas categorias abaixo para facilitar a visualização. A renda média mensal líquida é calculada a partir da soma da renda da categoria, dividida pela população de contribuintes na categoria e dividido por 13, correspondendo ao salário de 12 meses mais o 13 salário..\nFuncionários do sistema financeiro público ou privado e servidores públicos apresentam a maior renda, seguidos pelos empregador na iniciativa privada e militares que seguem quase empátados e depois, todos no mesmo nível Autônomos, Pensionistas, pequenas empresas e outros.\ndf = df_Nat[df_Nat[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='TIPO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  Se observarmos o extrato por profissão temos que levar em consideração que muitas profissões se enquadram em outros, que não estão sendo considerados. O foco é comparar os dados para os servidores públicos do executivo, legislativo e judiciário (junto com Ministerio Público) com militares, professores, funcionários da saúde e padres e pastores.\nÉ fácil observar que o número de declarantes no extrato considerado é majoritariamente de professores. As outras duas colunas se referem a participação do extrato profissional no todo, com respeito a renda total líquida e o imposto devido.\nA mudança de proporção entre as colunas indica variações na renda média entre a coluna de declarantes e a coluna de renda líquida e o imposto devido carrega as informações de renda e de representação na população.\nA renda édia de servidores do Juciário, servidores de saúde e servidores públicos em geral deve se mostgrar significativamente mais elevada do que as rendas das outras categorias. Podemos estimar que a renda média de militares e de pŕofessores deva ser semelhante.\nAo observarmos a renda média mensal entre as diferentes profissões, vemos que o Judiário e os funcionários do Fisco se destacam dos outros, logo depois os servidores do executivo e os servidores em geral.\nChama atenção que os profissionais da Saúde parecem ter uma renda pequena, mas todas as áreas estão agregadas.\nTambém os professores apresentam uma renda baixa, mas estão agregados diferentes profissionais da educação.\nQuando observamos os extrados segmentados, vemos que os professores de ensino superior são significativamente melhos remunerados do que os outros. Ganhando essencialmente o dobro dos outros professores.\nTambém os médicos se destacam, ganhando o triplo do que as outras categoriasda saúde.\nTambém encontramos uma uniformidade nas carreiras do judiciário e entre os servidores públicos.\n","date":1585440000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585440000,"objectID":"b438c7bb310e9f7b9d68e2c0cc1d09fa","permalink":"https://lbarosi.github.io/Blog/post/grandesfortunas/","publishdate":"2020-03-29T00:00:00Z","relpermalink":"/Blog/post/grandesfortunas/","section":"post","summary":"Como você acha que se posiciona na pirâmica econômica brasileira? Quão grande é a desigualdade de renda no Brasil? Um pequeno passeio nos dados sumarizados da receita federal.\nInicialização Diretório atual: /home/lbarosi/Pythonia/GrandesFortunas  Proposta Vamos utilizar os dados da Receita Federal disponíveis para procurar fazer uma boa visualização de dados sobre o que é de fato uma grande fortuna, para que casa pessoa possa se enxergar de maneira razoavelmente realista na pirâmide de renda e na distribuição por percentis.","tags":["Brasil","Renda"],"title":"Distribuição de Renda no Brasil","type":"post"},{"authors":null,"categories":["Python","Data Science"],"content":"Grandes Fortunas no Brasil Inicialização # show result from all calculations of the cell from IPython.core.interactiveshell import InteractiveShell InteractiveShell.ast_node_interactivity = \u0026quot;all\u0026quot;  # Kernel Python import os import sys os.chdir(sys.path[0]) dirpath = os.getcwd() print(\u0026quot;Diretório atual: \u0026quot; + dirpath)  Diretório atual: /home/lbarosi/Pythonia/GrandesFortunas  import numpy as np from scipy import stats import matplotlib.pyplot as plt import matplotlib.ticker as ticker import pandas as pd import seaborn as sns  Proposta Vamos utilizar os dados da Receita Federal disponíveis para procurar fazer uma boa visualização de dados sobre o que é de fato uma grande fortuna, para que casa pessoa possa se enxergar de maneira razoavelmente realista na pirâmide de renda e na distribuição por percentis.\nAdicionalmente, queremos vamos observar a participação no imposto de renda por Natureza de Ocupação e por Ocupação.\nDados A Receita Federal possui uma base de dados com informações agregadas da basew de dados de declaração de impostos de renda no Brasil. Vamos utilizar as tabelas de Distribuição da Renda por Centis para o ano de 2018, último ano disponível no momento de criação deste notebook.\nO Salário mínimo é utilizado como base de cálculo das aliquotas, para o ano de 2017 (referente ao ano da declaração de 2018) o valor do salário segue abaixo, expresso em reais.\nSM = 937.0  As alíquotas de imposto de renda para o ano base adotado são:\nFaixas = { 0 : 1903.99, 1 : 2826.65, 2 : 3751.05, 3 : 4664.68, 4 : 4664.68} Aliquota = { 0 : 0., 1 : 0.075, 2 : 0.15, 3 : 0.225, 4 : 0.275}  O imposto de grandes fortunas prevê três faixas de tributação. Quem tem patrimônio líquido entre 12 mil e 20 mil vezes o limite de isenção (entre $R$ $ 22,8 milhões e $R$ $ 38 milhões) paga 0,5% de imposto. As fortunas entre 20 mil e 70 mil vezes (entre $R$ $ 38 milhões e $R$ $ 133,2 milhões) pagam 0,75%. Milionários com patrimônio acima desse valor são tributados em 1%.\nAs classes de renda no Brasil tem muitas definições, vamos adotar uma definição baseada na renda, tendo como base o salário mínimo. Esta é a definição mais fácil de ser aplicada nos dados e comparada em qualquer série temporal.\n# Faixas 0.5, 0.75, 1 classeB = [10*SM*12, 20*SM*12] classeC = [4*SM*12, 10*SM*12] classeD = [2*SM*12, 4*SM*12]  A tabela em excel da receita federal não é útil para análise de dados automatizada, selecionamos algumas colunas e colocamos em um formato adequado para o pandas em uma tabela csv.\nConsideramos a tabela disponível para as informações consolidadas RB2 que inclui renda tributável, participações societárias, lucros e dividendos e rendas sujeitas a tributação exclusiva.\nSelecionamos os percentis (centil), o número de contribuintes (contribuinte), o limite superior do percentil (centil_SUP em R$), a média de renda do percentil (media em R$) e o importo devido da faixa (IR em milhões de R$).\ndf = pd.read_csv(\u0026quot;./DATA/centis-ac2018.csv\u0026quot;, sep = \u0026quot;;\u0026quot;)  Análise Criamos uma amostra da população em cada percentil dividindo a quantidade da população do percentil por 100 e distribuimos suas rendas de maneira uniforme no intervalo. O intuito aqui é puramente gráfico, para mostrar a densidade de pessoas em cada faixa de renda.\ntmp = np.empty(len(df.media), dtype=object) for i in np.arange(0,len(df.media)): def step(x): if x\u0026lt; 90: return 0.5 else: return 0.05 st = step(df.centil[i]) passo = 2*st tmp[i] = np.array([df.centil[i]-st + np.random.uniform(0,passo,int(df.contribuinte[i]/100)), np.random.uniform(0, df.centil_SUP[i], int(df.contribuinte[i]/100))])  Agora podemos visualizar a distribuição de renda por percentil. Para que tenhamos alguma referência, indicamos os limites das classes sociais D, C, B, e A, bem como o que serião as classes de grandes fortunas (que se dividiriam também em C, B e A.\nTambém marcamos a linha da pobreza e a linha que indica o teto do salário no Judiciário.\nA diferença de escalas é muito grande e é necessário uma escala logarítmica para viasualizar os dados. Mesmo esta escala não é muito fácil fazer todos os percentis aparecerem. Os dados se espalham por 7 ordens de grandeza.\nfig = plt.figure(figsize = (14,4)) fig.suptitle(\u0026quot;Percentis de renda do Brasil em 2018 e classes econômicas\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) for cent in np.arange(5,tmp.shape[0]): plt.scatter(x = tmp[cent][0], y = tmp[cent][1], s = 5, marker=\u0026quot;.\u0026quot;, alpha = 0.1) x = np.linspace(99,100.05,200) ax.fill_between(x, Faixas[0]*12000, Faixas[0]*20000, alpha = 0.7, label = \u0026quot;Grandes Fortunas B\u0026quot;) ax.fill_between(x, Faixas[0]*20000, Faixas[0]*70000, alpha = 0.7, label = \u0026quot;Grandes Fortunas C\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeB[1]].centil.max(), 100.05,200) ax.fill_between(x, classeB[1], 12*39*SM, alpha = 0.7, label = \u0026quot;Classe A\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeB[0]].centil.max(), df[df.centil_SUP \u0026lt; classeB[1]].centil.max(), 200) ax.fill_between(x, *classeB, alpha = 0.7, label = \u0026quot;Classe B:\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeC[0]].centil.max(), df[df.centil_SUP \u0026lt; classeC[1]].centil.max(), 200) ax.fill_between(x, *classeC, alpha = 0.7, label = \u0026quot;Classe C\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeD[0]].centil.max(), df[df.centil_SUP \u0026lt; classeD[1]].centil.max(), 200) ax.fill_between(x, *classeD, alpha = 0.7, label = \u0026quot;Classe D\u0026quot;) ax.axhline(12*39*SM, linewidth=2.5, linestyle = \u0026quot;dashed\u0026quot;, label = \u0026quot;Teto do Judiciario\u0026quot;); ax.axhline(365*3.4*5.5, linewidth=2.5, linestyle = \u0026quot;dotted\u0026quot;, color = \u0026quot;red\u0026quot;, label = \u0026quot;Linha da Pobreza\u0026quot;); ax.set_yscale(\u0026quot;log\u0026quot;) ax.scatter(x = df.centil, y = df.media, marker = \u0026quot;x\u0026quot;, c = \u0026quot;red\u0026quot;, label= \u0026quot;media de renda\u0026quot;) ax.set_ylim(100,10000000000) ax.set_xlim(1,101) ax.set_title(\u0026quot;Cada ponto corresponde a cerca de 3000 pessoas para cada 1%\u0026quot;) ax.set_ylabel(\u0026quot;Renda Bruta Anual (Log)\u0026quot;) ax.set_xlabel(\u0026quot;Percentil de renda\u0026quot;) plt.grid() plt.legend(loc='upper left') #fig.savefig('GrandesFortunas.png', dpi=300) plt.show();  Vamos agora observar com mais detalhe os percentis mais altos. Observamos que a distância entre as classes B e A e a extrema pobreza são menores do que as distâncias até o início da marca das grandes fortunas.\nNa definição atual de grandes fortunas, apenas uma pequena parte do percentil 99.9 - 100 é considerado grande fortuna, ou seja, as pessoas 100 vezes mais ricas do que a classe A típica. No gráfico abaixo, sem uma escala logarítmica, a classe B sequer apareceria!\nfig = plt.figure(figsize = (14,4)) fig.suptitle(\u0026quot;Percentis de renda do Brasil em 2018 e classes econômicas\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) for cent in np.arange(5,tmp.shape[0]): plt.scatter(x = tmp[cent][0], y = tmp[cent][1], s = 5, marker=\u0026quot;.\u0026quot;, alpha = 0.1) x = np.linspace(99,100.05,200) ax.fill_between(x, Faixas[0]*12000, Faixas[0]*20000, alpha = 0.7, label = \u0026quot;Grandes Fortunas B\u0026quot;) ax.fill_between(x, Faixas[0]*20000, Faixas[0]*70000, alpha = 0.7, label = \u0026quot;Grandes Fortunas C\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeB[1]].centil.max(), 100.05,200) ax.fill_between(x, classeB[1], 12*39*SM, alpha = 0.7, label = \u0026quot;Classe A\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeB[0]].centil.max(), df[df.centil_SUP \u0026lt; classeB[1]].centil.max(), 200) ax.fill_between(x, *classeB, alpha = 0.7, label = \u0026quot;Classe B:\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeC[0]].centil.max(), df[df.centil_SUP \u0026lt; classeC[1]].centil.max(), 200) ax.fill_between(x, *classeC, alpha = 0.7, label = \u0026quot;Classe C\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeD[0]].centil.max(), df[df.centil_SUP \u0026lt; classeD[1]].centil.max(), 200) ax.fill_between(x, *classeD, alpha = 0.7, label = \u0026quot;Classe D\u0026quot;) ax.axhline(12*39*SM, linewidth=2.5, linestyle = \u0026quot;dashed\u0026quot;, label = \u0026quot;Teto do Judiciario\u0026quot;); ax.axhline(365*3.4*5.5, linewidth=2.5, linestyle = \u0026quot;dotted\u0026quot;, color = \u0026quot;red\u0026quot;, label = \u0026quot;Linha da Pobreza\u0026quot;); ax.set_yscale(\u0026quot;log\u0026quot;) ax.scatter(x = df.centil, y = df.media, marker = \u0026quot;x\u0026quot;, c = \u0026quot;red\u0026quot;, label= \u0026quot;media de renda\u0026quot;) ax.set_ylim(100,10000000000) ax.set_xlim(90,101) ax.set_title(\u0026quot;Zoom no topo da pirâmide\u0026quot;) ax.set_ylabel(\u0026quot;Renda Bruta Anual (Log)\u0026quot;) ax.set_xlabel(\u0026quot;Percentil de renda\u0026quot;) plt.grid() plt.legend(loc='upper left') #fig.savefig('GrandesFortunas.png', dpi=300) plt.show();  O imposto de renda pago por cada contribuinte pode ser representado por uma alíquota efetiva, que leva em conta as diferentes faixas do imposto. Vamos aqui calcular a Alíquota efetiva por percentil.\nPara fazer isto vamos considerar o número de pessoas no percentil com renda dada pela média de renda do percentil, o que correspone a um total de renda do percentil.\nA tabela da receita apresenta também a informação de quanto foi o IR devido para todo o percentil. A razão entre estes dois números vai informar uma alíquota efetiva.\nVemos que crescimento da alíquota efetiva tem um padrão curioso nos percentis mais altos.\ndf[\u0026quot;Efetivo\u0026quot;] = df.IR*1000000/(df.media*df.contribuinte) df = df.dropna()  fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Alíquota efetiva de IR por percentil dos contribuintes\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) for i in np.arange(5,len(df.centil)-7): x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10) ax.fill_between(x, df.Efetivo[i]) for i in np.arange(98,len(df.centil)+4): x = np.linspace(df.centil[i]-0.05, df.centil[i]+0.05,10) ax.fill_between(x, df.Efetivo[i]) #ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), # color=\u0026quot;b\u0026quot;, # alpha = 0.2) ax.set_title(\u0026quot;Apenas classes C, B e A\u0026quot;) ax.set_ylabel(\u0026quot;Alíquota Efetiva\u0026quot;) ax.set_xlabel(\u0026quot;Percentil de renda\u0026quot;) ax.set_xlim(30,105) #plt.legend() #fig.savefig('ImpostoEfetivo.png', dpi=300) plt.grid() plt.show();  fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Alíquota efetiva de IR por percentil dos contribuintes\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) for i in np.arange(5,len(df.centil)-7): x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10) ax.fill_between(x, df.Efetivo[i], alpha = 0.6) for i in np.arange(98,len(df.centil)+4): x = np.linspace(df.centil[i]-0.05, df.centil[i]+0.05,10) ax.fill_between(x, df.Efetivo[i], alpha = 0.6) #ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), # color=\u0026quot;b\u0026quot;, # alpha = 0.2) ax.set_title(\u0026quot;Apenas classes C, B e A\u0026quot;) ax.set_ylabel(\u0026quot;Alíquota Efetiva\u0026quot;) ax.set_xlabel(\u0026quot;Percentil de renda\u0026quot;) ax.set_xlim(90,105) plt.grid() #plt.legend() fig.savefig('ImpostoEfetivo.png', dpi=300) plt.show();  fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Imposto Devido Total por percentil dos contribuintes\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) for i in np.arange(5,len(df.centil)-6): x = np.linspace(df.centil[i]-0.5, df.centil[i]+0.5,10) ax.fill_between(x, df.IR[i]) for i in np.arange(99,len(df.centil)+4): x = np.linspace(df.centil[i]+0.5-0.05, df.centil[i]+0.5+0.05,10) ax.fill_between(x, df.IR[i]) ax.fill_between(np.linspace(99.55, 100.55,10), df.IR[-10:].sum(), color=\u0026quot;b\u0026quot;, alpha = 0.2) x = np.linspace(df[df.centil_SUP \u0026lt; classeB[1]].centil.max(), 100.05,200) ax.fill_between(x, 20000, 21000, alpha = 0.6, label = \u0026quot;Classe A\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeB[0]].centil.max(), df[df.centil_SUP \u0026lt; classeB[1]].centil.max(), 200) ax.fill_between(x, 20000, 21000, alpha = 0.6, label = \u0026quot;Classe B:\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeC[0]].centil.max(), df[df.centil_SUP \u0026lt; classeC[1]].centil.max(), 200) ax.fill_between(x, 20000, 21000, alpha = 0.6, label = \u0026quot;Classe C\u0026quot;) x = np.linspace(df[df.centil_SUP \u0026lt; classeD[0]].centil.max(), df[df.centil_SUP \u0026lt; classeD[1]].centil.max(), 200) ax.fill_between(x, *classeD, alpha = 0.7, label = \u0026quot;Classe D\u0026quot;) ax.set_title(\u0026quot;Apenas classes C, B e A\u0026quot;) ax.set_ylabel(\u0026quot;Valor Devido do IR (R\\$ milhões)\u0026quot;) ax.set_xlabel(\u0026quot;Percentil de renda\u0026quot;) ax.set_xlim(50,105) ax.set_ylim(0,30000) plt.grid() #ax.set_yscale(\u0026quot;log\u0026quot;) #plt.legend() fig.savefig('ImpostoEfetivo.png', dpi=300) plt.show();  O 1% mais rica da população contribui com mais imposto do que 78% dos contribuintes somados. Por outro lado, a média de renda do pecentil 99.9 é maior do que todas as rendas somadas até o percentil 97!\ndf.IR[-10:].sum() \u0026lt; df.IR[0:76].sum(); df.IR[-10:].sum() \u0026lt; df.IR[0:77].sum(); df.centil[77];  df.media[-1:].sum() \u0026lt; df.media[0:96].sum(); df.centil[-1:]; df.centil[96];  Dados por Natureza de Ocupação df_Nat = pd.read_excel(\u0026quot;./DATA/RELATORIO_2017.xlsx\u0026quot;, sheet_name=\u0026quot;NATUREZA\u0026quot;) df_Ocu = pd.read_excel(\u0026quot;./DATA/RELATORIO_2017.xlsx\u0026quot;, sheet_name=\u0026quot;OCUPACAO\u0026quot;)  df_Nat = df_Nat.drop(columns = [\u0026quot;NATUREZA_DA_OCUPACAO\u0026quot;]).groupby(\u0026quot;TIPO\u0026quot;).sum() df_Nat[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Nat.QTDE_DECLARANTES/df_Nat.QTDE_DECLARANTES.sum() df_Nat[\u0026quot;FRACAO_RTL\u0026quot;] = df_Nat.RTL/df_Nat.RTL.sum() df_Nat[\u0026quot;FRACAO_IR\u0026quot;] = df_Nat.IR/df_Nat.IR.sum() df_Nat[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Nat.RTL/(df_Nat.QTDE_DECLARANTES*13) df_Nat[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Nat.IR/df_Nat.QTDE_DECLARANTES df_Nat = df_Nat.reset_index() df_Nat = df_Nat.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;TIPO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Nat.TIPO = df_Nat.TIPO.astype('category')  df_Ocu = df_Ocu.drop(columns = [\u0026quot;OCUPACAO\u0026quot;]).groupby(\u0026quot;Tipo\u0026quot;).sum() df_Ocu[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum() df_Ocu[\u0026quot;FRACAO_RTL\u0026quot;] = df_Ocu.RTL/df_Ocu.RTL.sum() df_Ocu[\u0026quot;FRACAO_IR\u0026quot;] = df_Ocu.IR/df_Ocu.IR.sum() df_Ocu[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13) df_Ocu[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES df_Ocu = df_Ocu.reset_index() df_Ocu = df_Ocu.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;Tipo\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Ocu.Tipo = df_Ocu.Tipo.astype('category')  As tabelas da receita federal também apresentam dados consolidados por ocupação e profissão. Reorgnizamos as categorias da Receita nas categorias abaixo para facilitar a visualização. A renda média mensal líquida é calculada a partir da soma da renda da categoria, dividida pela população de contribuintes na categoria e dividido por 13, correspondendo ao salário de 12 meses mais o 13 salário..\nFuncionários do sistema financeiro público ou privado e servidores públicos apresentam a maior renda, seguidos pelos empregador na iniciativa privada e militares que seguem quase empátados e depois, todos no mesmo nível Autônomos, Pensionistas, pequenas empresas e outros.\ndf = df_Nat[df_Nat[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='TIPO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  Se observarmos o extrato por profissão temos que levar em consideração que muitas profissões se enquadram em outros, que não estão sendo considerados. O foco é comparar os dados para os servidores públicos do executivo, legislativo e judiciário (junto com Ministerio Público) com militares, professores, funcionários da saúde e padres e pastores.\nÉ fácil observar que o número de declarantes no extrato considerado é majoritariamente de professores. As outras duas colunas se referem a participação do extrato profissional no todo, com respeito a renda total líquida e o imposto devido.\nA mudança de proporção entre as colunas indica variações na renda média entre a coluna de declarantes e a coluna de renda líquida e o imposto devido carrega as informações de renda e de representação na população.\nA renda édia de servidores do Juciário, servidores de saúde e servidores públicos em geral deve se mostgrar significativamente mais elevada do que as rendas das outras categorias. Podemos estimar que a renda média de militares e de pŕofessores deva ser semelhante.\nimport matplotlib.ticker as ticker df = df_Ocu[~df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;, \u0026quot;IR_capita\u0026quot;])] df = df[df.Tipo != \u0026quot;OUTROS\u0026quot;] df.Tipo = df.Tipo.astype(str) fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Fração do Total\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='Tipo', y='Value', hue='fracao') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;%\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') ax.yaxis.set_major_formatter(ticker.PercentFormatter(xmax=5)) handles, labels = ax.get_legend_handles_labels() ax.legend(handles = handles, labels=[\u0026quot;Declarantes\u0026quot;, \u0026quot;Renda Líquida\u0026quot;, \u0026quot;Imposto Devido\u0026quot;]) plt.grid() plt.show();  Ao observarmos a renda média mensal entre as diferentes profissões, vemos que o Judiário e os funcionários do Fisco se destacam dos outros, logo depois os servidores do executivo e os servidores em geral.\nChama atenção que os profissionais da Saúde parecem ter uma renda pequena, mas todas as áreas estão agregadas.\nTambém os professores apresentam uma renda baixa, mas estão agregados diferentes profissionais da educação.\ndf = df_Ocu[df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='Tipo', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  df_OcuZ = pd.read_excel(\u0026quot;./DATA/RELATORIO_2017.xlsx\u0026quot;, sheet_name=\u0026quot;OCUPACAO\u0026quot;)  Quando observamos os extrados segmentados, vemos que os professores de ensino superior são significativamente melhos remunerados do que os outros. Ganhando essencialmente o dobro dos outros professores.\nTambém os médicos se destacam, ganhando o triplo do que as outras categoriasda saúde.\nTambém encontramos uma uniformidade nas carreiras do judiciário e entre os servidores públicos.\nprof = \u0026quot;PROFESSOR\u0026quot; df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(\u0026quot;OCUPACAO\u0026quot;).sum() df_Ocu[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum() df_Ocu[\u0026quot;FRACAO_RTL\u0026quot;] = df_Ocu.RTL/df_Ocu.RTL.sum() df_Ocu[\u0026quot;FRACAO_IR\u0026quot;] = df_Ocu.IR/df_Ocu.IR.sum() df_Ocu[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13) df_Ocu[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES df_Ocu = df_Ocu.reset_index() df_Ocu = df_Ocu.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;OCUPACAO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype('category') df = df_Ocu[df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal - Profissionais de Educação\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='OCUPACAO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  prof = \u0026quot;SAÚDE\u0026quot; df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(\u0026quot;OCUPACAO\u0026quot;).sum() df_Ocu[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum() df_Ocu[\u0026quot;FRACAO_RTL\u0026quot;] = df_Ocu.RTL/df_Ocu.RTL.sum() df_Ocu[\u0026quot;FRACAO_IR\u0026quot;] = df_Ocu.IR/df_Ocu.IR.sum() df_Ocu[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13) df_Ocu[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES df_Ocu = df_Ocu.reset_index() df_Ocu = df_Ocu.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;OCUPACAO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype('category') df = df_Ocu[df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal - Profissionais da Saúde\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='OCUPACAO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  prof = \u0026quot;SERVIDOR\u0026quot; df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(\u0026quot;OCUPACAO\u0026quot;).sum() df_Ocu[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum() df_Ocu[\u0026quot;FRACAO_RTL\u0026quot;] = df_Ocu.RTL/df_Ocu.RTL.sum() df_Ocu[\u0026quot;FRACAO_IR\u0026quot;] = df_Ocu.IR/df_Ocu.IR.sum() df_Ocu[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13) df_Ocu[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES df_Ocu = df_Ocu.reset_index() df_Ocu = df_Ocu.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;OCUPACAO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype('category') df = df_Ocu[df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal - Servidor Público\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='OCUPACAO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  prof = \u0026quot;JUDICIARIO\u0026quot; df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(\u0026quot;OCUPACAO\u0026quot;).sum() df_Ocu[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum() df_Ocu[\u0026quot;FRACAO_RTL\u0026quot;] = df_Ocu.RTL/df_Ocu.RTL.sum() df_Ocu[\u0026quot;FRACAO_IR\u0026quot;] = df_Ocu.IR/df_Ocu.IR.sum() df_Ocu[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13) df_Ocu[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES df_Ocu = df_Ocu.reset_index() df_Ocu = df_Ocu.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;OCUPACAO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype('category') df = df_Ocu[df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal - JUDICIÁRIO\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='OCUPACAO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  prof = \u0026quot;EXECUTIVO\u0026quot; df_Ocu = df_OcuZ[df_OcuZ.Tipo == prof].groupby(\u0026quot;OCUPACAO\u0026quot;).sum() df_Ocu[\u0026quot;FRACAO_Declarantes\u0026quot;] = df_Ocu.QTDE_DECLARANTES/df_Ocu.QTDE_DECLARANTES.sum() df_Ocu[\u0026quot;FRACAO_RTL\u0026quot;] = df_Ocu.RTL/df_Ocu.RTL.sum() df_Ocu[\u0026quot;FRACAO_IR\u0026quot;] = df_Ocu.IR/df_Ocu.IR.sum() df_Ocu[\u0026quot;RTL_capita\u0026quot;] = 1000000000*df_Ocu.RTL/(df_Ocu.QTDE_DECLARANTES*13) df_Ocu[\u0026quot;IR_capita\u0026quot;] = 1000000000*df_Ocu.IR/df_Ocu.QTDE_DECLARANTES df_Ocu = df_Ocu.reset_index() df_Ocu = df_Ocu.drop( columns = [\u0026quot;QTDE_DECLARANTES\u0026quot;, \u0026quot;RT_EXCLUSIVO\u0026quot;, \u0026quot;RT\u0026quot;, \u0026quot;RISENTO\u0026quot;, \u0026quot;RTL\u0026quot;, \u0026quot;IR\u0026quot;])\\ .melt(id_vars=[\u0026quot;OCUPACAO\u0026quot;], var_name=\u0026quot;fracao\u0026quot;, value_name=\u0026quot;Value\u0026quot;) df_Ocu.OCUPACAO = df_Ocu.OCUPACAO.astype('category') df = df_Ocu[df_Ocu[\u0026quot;fracao\u0026quot;].isin([\u0026quot;RTL_capita\u0026quot;])] fig = plt.figure(figsize = (15,5)) fig.suptitle(\u0026quot;Renda Líquida Média Mensal - EXECUTIVO\u0026quot;, fontsize=14, fontweight='bold') ax = fig.add_subplot(111 ) ax = sns.barplot(data=df, x='OCUPACAO', y='Value') ax.set_xlabel(\u0026quot;Natureza da Ocupação\u0026quot;) ax.set_ylabel(\u0026quot;R\\$\u0026quot;) ax.set_xticklabels(ax.get_xticklabels(), rotation=45, horizontalalignment='right') plt.grid() plt.show();  ","date":1585440000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1585440000,"objectID":"99168329571906832bb476d596a32414","permalink":"https://lbarosi.github.io/Blog/publication/grandesfortunas/","publishdate":"2020-03-29T00:00:00Z","relpermalink":"/Blog/publication/grandesfortunas/","section":"publication","summary":"Grandes Fortunas no Brasil Inicialização # show result from all calculations of the cell from IPython.core.interactiveshell import InteractiveShell InteractiveShell.ast_node_interactivity = \u0026quot;all\u0026quot;  # Kernel Python import os import sys os.chdir(sys.path[0]) dirpath = os.","tags":["Brasil","Renda"],"title":"Distribuição de Renda no Brasil","type":"publication"},{"authors":null,"categories":null,"content":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you\u0026rsquo;ll find some examples of the types of technical content that can be rendered with Academic.\nExamples Code Academic supports a Markdown extension for highlighting code syntax. You can enable this feature by toggling the highlight option in your config/_default/params.toml file.\n```python import pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head() ```  renders as\nimport pandas as pd data = pd.read_csv(\u0026quot;data.csv\u0026quot;) data.head()  Math Academic supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.toml file.\nTo render inline or block math, wrap your LaTeX math with $...$ or $$...$$, respectively.\nExample math block:\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |} {\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$  renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left |\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right |^2}$$\nExample inline math $\\nabla F(\\mathbf{x}_{n})$ renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the \\\\ math linebreak:\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\ 1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$  renders as\n$$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nDiagrams Academic supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ```  renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2]  An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ```  renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good!  An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ```  renders as\ngantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d  An example class diagram:\n```mermaid classDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() } ```  renders as\nclassDiagram Class01 \u0026lt;|-- AveryLongClass : Cool \u0026lt;\u0026lt;interface\u0026gt;\u0026gt; Class01 Class09 --\u0026gt; C2 : Where am i? Class09 --* C3 Class09 --|\u0026gt; Class07 Class07 : equals() Class07 : Object[] elementData Class01 : size() Class01 : int chimp Class01 : int gorilla class Class10 { \u0026lt;\u0026lt;service\u0026gt;\u0026gt; int id size() }  An example state diagram:\n```mermaid stateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*] ```  renders as\nstateDiagram [*] --\u0026gt; Still Still --\u0026gt; [*] Still --\u0026gt; Moving Moving --\u0026gt; Still Moving --\u0026gt; Crash Crash --\u0026gt; [*]  Todo lists You can even write your todo lists in Academic too:\n- [x] Write math example - [x] Write diagram example - [ ] Do something else  renders as\n Write math example Write diagram example Do something else  Tables Represent your data in tables:\n| First Header | Second Header | | ------------- | ------------- | | Content Cell | Content Cell | | Content Cell | Content Cell |  renders as\n   First Header Second Header     Content Cell Content Cell   Content Cell Content Cell    Asides Academic supports a shortcode for asides, also referred to as notices, hints, or alerts. By wrapping a paragraph in {{% alert note %}} ... {{% /alert %}}, it will render as an aside.\n{{% alert note %}} A Markdown aside is useful for displaying notices, hints, or definitions to your readers. {{% /alert %}}  renders as\n A Markdown aside is useful for displaying notices, hints, or definitions to your readers.   Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons in addition to emojis.\nHere are some examples using the icon shortcode to render icons:\n{{\u0026lt; icon name=\u0026quot;terminal\u0026quot; pack=\u0026quot;fas\u0026quot; \u0026gt;}} Terminal {{\u0026lt; icon name=\u0026quot;python\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} Python {{\u0026lt; icon name=\u0026quot;r-project\u0026quot; pack=\u0026quot;fab\u0026quot; \u0026gt;}} R  renders as\n  Terminal\n Python\n R\nDid you find this page helpful? Consider sharing it 🙌 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://lbarosi.github.io/Blog/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/Blog/post/writing-technical-content/","section":"post","summary":"Academic is designed to give technical content creators a seamless experience. You can focus on the content and Academic handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Academic  Academic | Documentation\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click  PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)   Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}   Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }   Questions?  Ask\n Documentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://lbarosi.github.io/Blog/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/Blog/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"}]